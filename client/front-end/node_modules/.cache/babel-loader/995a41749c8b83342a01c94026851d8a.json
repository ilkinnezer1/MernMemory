{"ast":null,"code":"var _jsxFileName = \"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { useDispatch } from \"react-redux\";\nimport getPost from './REDUX/action/action';\nimport Navbar from \"./components/Nav Panel/Navbar\";\nimport Posts from './components/Post/posts';\nimport FormElements from './components/Form/forms';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [currentId, setCurrentId] = useState(null);\n  const dispatch = useDispatch(); //MAKES DISPATCHING WHERE IT CAN DISPLAY OUR DATA ON THE SCREEN\n  // IT WILL WORK ONLY WHEN THE DISPATCH METHOD WORKS\n\n  useEffect(() => {\n    dispatch(getPost());\n  }, [currentId, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Posts, {\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FormElements, {\n        currentId: currentId,\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"rLqmGLQXg0bSAhPeW1zaNWSP680=\", false, function () {\n  return [useDispatch];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/App.js"],"names":["useEffect","useState","useDispatch","getPost","Navbar","Posts","FormElements","BrowserRouter","Router","Switch","Route","App","currentId","setCurrentId","dispatch"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAaC,YAAb,IAA6BZ,QAAQ,CAAC,IAAD,CAA3C;AACA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B,CAFgB,CAIhB;AACA;;AACEF,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,QAAQ,CAACX,OAAO,EAAR,CAAR;AACD,GAFQ,EAEP,CAACS,SAAD,EAAWE,QAAX,CAFO,CAAT;AAIF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACA,QAAC,KAAD;AAAO,QAAA,YAAY,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,YAAD;AAAc,QAAA,SAAS,EAAED,SAAzB;AAAoC,QAAA,YAAY,EAAEC;AAAlD;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CApBD;;GAAMF,G;UAEaT,W;;;KAFbS,G;AAsBN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport {useDispatch} from \"react-redux\"\nimport getPost from './REDUX/action/action';\nimport Navbar from \"./components/Nav Panel/Navbar\"\nimport Posts from './components/Post/posts'\nimport FormElements from './components/Form/forms';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\n\nconst App = () => {\n  const [currentId,  setCurrentId] = useState(null)\n  const dispatch = useDispatch();\n  \n  //MAKES DISPATCHING WHERE IT CAN DISPLAY OUR DATA ON THE SCREEN\n  // IT WILL WORK ONLY WHEN THE DISPATCH METHOD WORKS\n    useEffect(() => {\n      dispatch(getPost())\n    },[currentId,dispatch])\n\n  return (\n    <div className=\"App\">\n      \n      <Navbar/>\n      <div className=\"container\">\n      <Posts setCurrentId={setCurrentId}/>\n      <FormElements currentId={currentId} setCurrentId={setCurrentId}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}