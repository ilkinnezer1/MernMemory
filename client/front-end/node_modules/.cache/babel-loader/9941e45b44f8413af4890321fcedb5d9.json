{"ast":null,"code":"var _jsxFileName = \"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Details/PostDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Paper, Typography, CircularProgress, Divider } from \"@material-ui/core\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSinglePost, getPostbySearch } from '../../REDUX/action/action';\nimport useStyles from \"./styles\";\nimport \"./details.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetails = () => {\n  _s();\n\n  //Taking all posts from reducer\n  const posts = useSelector(state => state.posts);\n  const {\n    post\n  } = useSelector(state => state.posts);\n  console.log(post);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    dispatch(getSinglePost(id));\n  }, [id]); //Executing by changing id\n  //Second useEffect will render depends on post\n\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostbySearch({\n        search: \"none\",\n        tags: post === null || post === void 0 ? void 0 : post.tags.join(\",\")\n      }));\n    }\n  }, [post]); //  const recommendedPost = posts.filter(({_id}) => _id !== post._id)\n\n  console.log(recommendedPost); //Map and render\n  //CHECKING THE EXISTENCE OF SINGLE POST\n\n  if (!post) return null;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: '20px',\n      borderRadius: '15px'\n    },\n    elevation: 6,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.section,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h2\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          color: \"textSecondary\",\n          component: \"h2\",\n          children: post.tags.map(tag => `#${tag} `)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body1\",\n          component: \"p\",\n          children: post.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: '20px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: '20px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imageSection,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.media,\n          src: post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png',\n          alt: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this), recommendedPost.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"Recommended: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: recommendedPost.map(({\n          title,\n          likes,\n          message,\n          selectedFile,\n          _id\n        }) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 23\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n};\n\n_s(PostDetails, \"IIOFtSYe759XQl40xp/0hjZzsMU=\", false, function () {\n  return [useSelector, useSelector, useStyles, useDispatch, useHistory, useParams];\n});\n\n_c = PostDetails;\nexport default PostDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"sources":["/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Details/PostDetails.jsx"],"names":["React","useEffect","Paper","Typography","CircularProgress","Divider","useParams","useHistory","useDispatch","useSelector","getSinglePost","getPostbySearch","useStyles","PostDetails","posts","state","post","console","log","classes","dispatch","history","id","search","tags","join","recommendedPost","padding","borderRadius","card","section","title","map","tag","message","margin","imageSection","media","selectedFile","length","likes","_id"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react'\nimport {Paper, Typography, CircularProgress, Divider} from \"@material-ui/core\"\nimport {useParams, useHistory} from \"react-router-dom\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport { getSinglePost, getPostbySearch } from '../../REDUX/action/action'\nimport useStyles from \"./styles\"\nimport \"./details.css\"\n\nconst PostDetails = () => {  //Taking all posts from reducer\n    const posts =  useSelector(state => state.posts)\n    const {post} = useSelector(state => state.posts)\n    console.log(post)\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const {id} = useParams()\n\n    useEffect(()=> {\n        dispatch(getSinglePost(id))\n    }, [id]) //Executing by changing id\n    //Second useEffect will render depends on post\n\n    useEffect(() => {\n        if(post){\n          dispatch(getPostbySearch({search: \"none\",  tags: post?.tags.join(\",\")}))\n        }\n    }, [post] )\n          //  const recommendedPost = posts.filter(({_id}) => _id !== post._id)\n           console.log(recommendedPost)\n //Map and render\n      //CHECKING THE EXISTENCE OF SINGLE POST\n      if(!post) return null;\n\n    return (\n      <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n       <div className={classes.card}>\n          <div className={classes.section}>\n            <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n          <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n            <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n              <Divider style={{ margin: '20px 0' }} />\n              <Divider style={{ margin: '20px 0' }} />\n            </div>\n              <div className={classes.imageSection}>\n             <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n              </div>\n              </div>\n              {recommendedPost.length  && (\n                <div>\n                  <Typography variant=\"h5\">Recommended: </Typography>\n                  <div>\n                    {recommendedPost.map(({title, likes, message, selectedFile, _id}) => (\n                      <div>{title}</div>\n                    ))}\n                  </div>\n                </div>\n              )}\n              </Paper>\n    )\n}\n\nexport default PostDetails\n"]},"metadata":{},"sourceType":"module"}