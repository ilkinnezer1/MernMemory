{"ast":null,"code":"var _jsxFileName = \"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputCont from './InputCont';\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\nimport { GoogleLogin } from \"react-google-login\";\nimport { signInNewProfile, signUpNewAccount } from '../../REDUX/action/auth';\nimport { Container, Grid } from \"@material-ui/core\";\nimport \"./Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const INITIAL_STATE = {\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const [showPass, setShowPass] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [inputData, setInputData] = useState(INITIAL_STATE);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (isSignUp) {\n      dispatch(signUpNewAccount(inputData, history));\n    } else {\n      dispatch(signInNewProfile(inputData, history));\n    }\n  };\n\n  const handleShowPassword = () => setShowPass(prev => !prev); //Toggling show password function that will make password visible to check out\n\n\n  const handleChange = event => {\n    setInputData({ ...inputData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIsSignUp(prev => !prev);\n    setShowPass(false);\n  }; //Google Authentication\n\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: \"AUTH\",\n        payload: {\n          result,\n          token\n        }\n      });\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log(\"Google sing in process was unsuccessful. Try again\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" main-container\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"main form-container\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/register-icon-png-8.jpeg\",\n            className: \"avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h1\",\n            children: isSignUp ? \"Sign up\" : \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container-wrapper\",\n              children: [isSignUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \" main-input-group\",\n                  children: [/*#__PURE__*/_jsxDEV(InputCont, {\n                    name: \"name\",\n                    label: \"Your name\",\n                    handleChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputCont, {\n                    name: \"surname\",\n                    label: \"Your surname\",\n                    handleChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \" second-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"first\",\n                  children: /*#__PURE__*/_jsxDEV(InputCont, {\n                    name: \"email\",\n                    label: \"Email\",\n                    handleChange: handleChange,\n                    type: \"email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(InputCont, {\n                  name: \"password\",\n                  label: \"Password\",\n                  handleChange: handleChange,\n                  type: showPass ? \"text\" : \"password\",\n                  handleShowPassword: handleShowPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 13\n              }, this), isSignUp && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"password-confirmation\",\n                children: /*#__PURE__*/_jsxDEV(InputCont, {\n                  name: \"confirmPassword\",\n                  label: \"Password Confirmation\",\n                  handleChange: handleChange,\n                  type: \"password\",\n                  handleShowPassword: handleShowPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 22\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n            clientId: \"74369160375-94lchn31v8jivfash19jfe9605cs8v07.apps.googleusercontent.com\",\n            render: renderProps => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mt-5 p-2 rounded\",\n              onClick: renderProps.onClick,\n              disabled: renderProps.disabled,\n              children: \"Sign up with Google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 14\n            }, this),\n            onSuccess: googleSuccess,\n            onFailure: googleFailure,\n            cookiePolicy: \"single_host_origin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-success\",\n              children: isSignUp ? \"Sign up\" : \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-tag\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  onClick: switchMode,\n                  children: isSignUp ? \"Already have an account? Sign in\" : \"Don't have an account ? Sign up\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"tbLJvR4eO+fGdnVYpvJAPf1chUY=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Auth/Auth.js"],"names":["React","useState","InputCont","useDispatch","useHistory","GoogleLogin","signInNewProfile","signUpNewAccount","Container","Grid","Auth","INITIAL_STATE","name","surname","email","password","confirmPassword","showPass","setShowPass","isSignUp","setIsSignUp","inputData","setInputData","dispatch","history","handleSubmit","event","preventDefault","handleShowPassword","prev","handleChange","target","value","switchMode","googleSuccess","res","result","profileObj","token","tokenId","type","payload","push","error","console","log","googleFailure","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport InputCont from './InputCont'\nimport {useDispatch} from \"react-redux\"\nimport {useHistory } from 'react-router-dom'\nimport {GoogleLogin} from \"react-google-login\"\nimport {signInNewProfile, signUpNewAccount } from '../../REDUX/action/auth'\nimport {Container, Grid} from \"@material-ui/core\"\nimport \"./Auth.css\"\n\nconst Auth = () => {\n    const INITIAL_STATE = {\n        name:\"\",\n        surname:\"\",\n        email:\"\",\n        password:\"\",\n        confirmPassword: \"\"\n    }\n\nconst [showPass, setShowPass] = useState(false)\nconst [isSignUp, setIsSignUp] = useState(false)\nconst [inputData, setInputData] = useState(INITIAL_STATE)\nconst dispatch = useDispatch()\nconst history = useHistory()\n\n\n    const handleSubmit = event => {\n        event.preventDefault()\n\n        if(isSignUp){\n            dispatch(signUpNewAccount(inputData, history))\n        }else{\n            dispatch(signInNewProfile(inputData, history))\n        }\n    }\n    const handleShowPassword = () => setShowPass(prev => !prev ) //Toggling show password function that will make password visible to check out\n    \n    const handleChange = event => {\n        setInputData({...inputData, [event.target.name]: event.target.value})\n    }\n    const switchMode = () => {\n        setIsSignUp(prev => !prev)\n        setShowPass(false)\n    }\n\n    //Google Authentication\n    const googleSuccess = async (res) => {\n        const result = res?.profileObj;\n        const token = res?.tokenId\n\n        try{\n            dispatch({type: \"AUTH\", payload: {result, token}})\n            history.push(\"/\")\n        }catch(error){\n            console.log(error)\n        }\n    }\n    const googleFailure = () => {\n        console.log(\"Google sing in process was unsuccessful. Try again\")\n    }\n\n    return (\n        <div className=\" main-container\">\n            <Container>\n            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12\">\n            <form className=\"main form-container\" onSubmit={handleSubmit}>\n            <img src=\"/register-icon-png-8.jpeg\" className=\"avatar\"/>\n        <div className=\"h1\">{isSignUp ? \"Sign up\" : \"Sign in\"}</div> \n        <Grid container spacing={2}> \n        <div className=\"container-wrapper\">\n            {isSignUp && (\n                <>\n                    <div className=\" main-input-group\">\n                    <InputCont name=\"name\" label=\"Your name\" handleChange={handleChange}/>\n                    <InputCont name=\"surname\" label=\"Your surname\" handleChange={handleChange}/>\n                    </div>\n                </>\n            )}\n            <div className=\" second-input-group\">\n                <div className=\"first\">\n                <InputCont name=\"email\" label=\"Email\" handleChange={handleChange} type={\"email\"} />\n                </div>\n            <InputCont name=\"password\" label=\"Password\" handleChange={handleChange} type={showPass ? \"text\" : \"password\"} handleShowPassword={handleShowPassword}/>\n            </div>\n            {isSignUp && (\n                <div className=\"password-confirmation\">\n                     <InputCont name=\"confirmPassword\" label=\"Password Confirmation\" handleChange={handleChange} type=\"password\" handleShowPassword={handleShowPassword}/>\n                </div>\n            )}\n        </div>\n        </Grid>\n        <GoogleLogin\n         clientId=\"74369160375-94lchn31v8jivfash19jfe9605cs8v07.apps.googleusercontent.com\"\n         render={renderProps => (\n             <button className=\"btn btn-primary mt-5 p-2 rounded\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign up with Google</button>\n         )}\n         onSuccess = {googleSuccess}\n         onFailure = {googleFailure}\n         cookiePolicy = \"single_host_origin\"\n         />\n                <div className=\"button\">\n                <button type=\"submit\" className=\"btn btn-success\">{isSignUp ? \"Sign up\" : \"Sign in\"}</button>\n                </div>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <div className=\"p-tag\">\n                    <p onClick={switchMode}>{isSignUp ? \"Already have an account? Sign in\" : \"Don't have an account ? Sign up\"}</p>\n                    </div>\n                </Grid>\n            </Grid>\n</form>\n</div>\n</Container>\n        </div>\n    )\n}\n\nexport default Auth\n"]},"metadata":{},"sourceType":"module"}