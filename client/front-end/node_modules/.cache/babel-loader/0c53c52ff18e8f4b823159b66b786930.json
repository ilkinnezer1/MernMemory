{"ast":null,"code":"var _jsxFileName = \"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Form/forms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Label, FormText, FormGroup, Input, Button } from \"reactstrap\";\nimport FileBase from \"react-file-base64\";\nimport { createNewPost, updateNewPost } from '../../REDUX/action/action';\nimport \"./form.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FormElements = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  // UseState Hook that defines our  database collection and take its value also control\n  const selector = useSelector(state => currentId ? state.posts.find(p => p._id === currentId) : null);\n  console.log(selector);\n  console.log(currentId);\n  const [inputData, setInputData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const dispatch = useDispatch(); // HandleSubmit will send data received from form elements to backEnd\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (currentId) {\n      dispatch(updateNewPost(currentId, inputData));\n    } else {\n      dispatch(createNewPost(inputData));\n    }\n  };\n\n  useEffect(() => {\n    if (selector) {\n      setInputData(selector);\n    }\n  }, [selector]); //Creating form elements and adding select file function by FileBase\n  // Controlling its value and submit all data for sending to the database\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"main-form d-flex\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n      className: \"header-text bg bg-dark p-2 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(FormText, {\n        color: \"light\",\n        children: currentId ? \"Editing your impression\" : \"Creating your short impression\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        for: \"creator\",\n        className: \"mb-2\",\n        children: \"Creator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        required: true,\n        autoComplete: \"off\",\n        type: \"text\",\n        name: \"email\",\n        id: \"creator\",\n        placeholder: \"type your name...\",\n        value: inputData.creator,\n        onChange: e => setInputData({ ...inputData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        className: \"mb-2\",\n        for: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        required: true,\n        type: \"text\",\n        name: \"title\",\n        id: \"title\",\n        placeholder: \"title...\",\n        value: inputData.title,\n        onChange: e => setInputData({ ...inputData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        className: \"mb-2\",\n        for: \"title\",\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        required: true,\n        type: \"text\",\n        name: \"title\",\n        id: \"tags\",\n        placeholder: \"to your friends\",\n        value: inputData.tags,\n        onChange: e => setInputData({ ...inputData,\n          tags: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n      className: \"mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        className: \"mb-2\",\n        for: \"message\",\n        children: \"Your impression\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"textarea\",\n        name: \"text\",\n        id: \"text\",\n        placeholder: \"share your impression\",\n        className: \"text-area\",\n        cols: \"30\",\n        rows: \"5\",\n        value: inputData.message,\n        onChange: e => setInputData({ ...inputData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileBase, {\n      className: \"selected-file\",\n      type: \"file\",\n      multiple: false,\n      onDone: ({\n        base64\n      }) => setInputData({ ...inputData,\n        selectedFile: base64\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: \"btn btn-success mt-2\",\n      children: \"Share\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn btn-danger mb-2 mt-2\",\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FormElements, \"5ehvvN7ZFVUlnAXq79bi8qGCyyI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = FormElements;\nexport default FormElements;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormElements\");","map":{"version":3,"sources":["/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Form/forms.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Form","Label","FormText","FormGroup","Input","Button","FileBase","createNewPost","updateNewPost","FormElements","currentId","setCurrentId","selector","state","posts","find","p","_id","console","log","inputData","setInputData","creator","title","message","tags","selectedFile","dispatch","handleSubmit","e","preventDefault","target","value","base64"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,QAArB,EAA+BC,SAA/B,EAA0CC,KAA1C,EAAkDC,MAAlD,QAA+D,YAA/D;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,2BAA3C;AACA,OAAO,YAAP;;;AAGA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAAgC;AAAA;;AAC7C;AACF,QAAMC,QAAQ,GAAGb,WAAW,CAACc,KAAK,IAAIH,SAAS,GAAGG,KAAK,CAACC,KAAN,CAAYC,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAASP,SAA/B,CAAH,GAA+C,IAAlE,CAA5B;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AAEE,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC;AAAC0B,IAAAA,OAAO,EAAC,EAAT;AAAaC,IAAAA,KAAK,EAAC,EAAnB;AAAuBC,IAAAA,OAAO,EAAC,EAA/B;AAAmCC,IAAAA,IAAI,EAAC,EAAxC;AAA4CC,IAAAA,YAAY,EAAC;AAAzD,GAAD,CAA1C;AACA,QAAMC,QAAQ,GAAG7B,WAAW,EAA5B,CAP6C,CAQrD;;AACI,QAAM8B,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGpB,SAAH,EAAa;AACXiB,MAAAA,QAAQ,CAACnB,aAAa,CAACE,SAAD,EAAWU,SAAX,CAAd,CAAR;AACD,KAFD,MAEK;AACHO,MAAAA,QAAQ,CAACpB,aAAa,CAACa,SAAD,CAAd,CAAR;AACD;AAEJ,GARD;;AAWAvB,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGe,QAAH,EAAY;AACVS,MAAAA,YAAY,CAACT,QAAD,CAAZ;AACD;AACJ,GAJQ,EAIN,CAACA,QAAD,CAJM,CAAT,CApBiD,CAyBjD;AACA;;AACA,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,IAAA,QAAQ,EAAEgB,YAA7C;AAAA,4BACA,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,iCAArB;AAAA,6BACA,QAAC,QAAD;AAAU,QAAA,KAAK,EAAC,OAAhB;AAAA,kBACElB,SAAS,GAAG,yBAAH,GAA8B;AADzC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA,eAMF,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,GAAG,EAAC,SAAX;AAAqB,QAAA,SAAS,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACC,QAAA,QAAQ,MADT;AAEC,QAAA,YAAY,EAAC,KAFd;AAGC,QAAA,IAAI,EAAC,MAHN;AAIC,QAAA,IAAI,EAAC,OAJN;AAKC,QAAA,EAAE,EAAC,SALJ;AAMC,QAAA,WAAW,EAAC,mBANb;AAOC,QAAA,KAAK,EAAEU,SAAS,CAACE,OAPlB;AAQC,QAAA,QAAQ,EAAGO,CAAD,IAAMR,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeE,UAAAA,OAAO,EAAEO,CAAC,CAACE,MAAF,CAASC;AAAjC,SAAD;AAR7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANE,eAkBF,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,GAAG,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACC,QAAA,QAAQ,MADT;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,IAAI,EAAC,OAHN;AAIC,QAAA,EAAE,EAAC,OAJJ;AAKC,QAAA,WAAW,EAAC,UALb;AAMC,QAAA,KAAK,EAAEZ,SAAS,CAACG,KANlB;AAOC,QAAA,QAAQ,EAAGM,CAAD,IAAKR,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeG,UAAAA,KAAK,EAAEM,CAAC,CAACE,MAAF,CAASC;AAA/B,SAAD;AAP5B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBE,eA6BF,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,GAAG,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACA,QAAA,QAAQ,MADR;AAEA,QAAA,IAAI,EAAC,MAFL;AAGA,QAAA,IAAI,EAAC,OAHL;AAIC,QAAA,EAAE,EAAC,MAJJ;AAKC,QAAA,WAAW,EAAC,iBALb;AAMC,QAAA,KAAK,EAAEZ,SAAS,CAACK,IANlB;AAOC,QAAA,QAAQ,EAAGI,CAAD,IAAKR,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeK,UAAAA,IAAI,EAAEI,CAAC,CAACE,MAAF,CAASC;AAA9B,SAAD;AAP5B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA7BE,eAwCF,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,MAAjB;AAAwB,QAAA,GAAG,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACC,QAAA,IAAI,EAAC,UADN;AAEC,QAAA,IAAI,EAAC,MAFN;AAGC,QAAA,EAAE,EAAC,MAHJ;AAIC,QAAA,WAAW,EAAC,uBAJb;AAKC,QAAA,SAAS,EAAC,WALX;AAMC,QAAA,IAAI,EAAC,IANN;AAMW,QAAA,IAAI,EAAC,GANhB;AAOC,QAAA,KAAK,EAAEZ,SAAS,CAACI,OAPlB;AAQC,QAAA,QAAQ,EAAGK,CAAD,IAAKR,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeI,UAAAA,OAAO,EAAEK,CAAC,CAACE,MAAF,CAASC;AAAjC,SAAD;AAR5B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCE,eAoDF,QAAC,QAAD;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAE,KAHZ;AAIE,MAAA,MAAM,EAAG,CAAC;AAACC,QAAAA;AAAD,OAAD,KAAcZ,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeM,QAAAA,YAAY,EAAEO;AAA7B,OAAD;AAJrC;AAAA;AAAA;AAAA;AAAA,YApDE,eAyDF,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,sBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzDE,eA0DF,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,0BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1DE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8DH,CAzFD;;GAAMxB,Y;UAEiBV,W,EAKED,W;;;KAPnBW,Y;AA0FN,eAAeA,YAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {Form, Label, FormText, FormGroup, Input,  Button} from \"reactstrap\"\nimport FileBase from \"react-file-base64\"\nimport {createNewPost, updateNewPost} from '../../REDUX/action/action'\nimport \"./form.css\"\n\n\nconst FormElements = ({currentId, setCurrentId}) =>  {\n        // UseState Hook that defines our  database collection and take its value also control\n      const selector = useSelector(state => currentId ? state.posts.find(p => p._id ===currentId) : null)\n      console.log(selector)\n      console.log(currentId)\n\n        const [inputData, setInputData] = useState({creator:'', title:'', message:'', tags:'', selectedFile:''})\n        const dispatch = useDispatch()\n// HandleSubmit will send data received from form elements to backEnd\n    const handleSubmit = e => {\n        e.preventDefault()\n        if(currentId){\n          dispatch(updateNewPost(currentId,inputData))\n        }else{\n          dispatch(createNewPost(inputData))\n        }\n\n    }\n\n\n    useEffect(()=> {\n        if(selector){\n          setInputData(selector)\n        }\n    }, [selector])\n    //Creating form elements and adding select file function by FileBase\n    // Controlling its value and submit all data for sending to the database\n    return (\n        <Form className=\"main-form d-flex\" onSubmit={handleSubmit}>\n        <FormGroup className=\"header-text bg bg-dark p-2 mb-3\">\n        <FormText color=\"light\" >\n         {currentId ? \"Editing your impression\": \"Creating your short impression\"}\n        </FormText>\n      </FormGroup>\n      <FormGroup className=\"mb-2\">\n        <Label for=\"creator\" className=\"mb-2\">Creator</Label>\n        <Input\n         required\n         autoComplete=\"off\"\n         type=\"text\"\n         name=\"email\" \n         id=\"creator\" \n         placeholder=\"type your name...\" \n         value={inputData.creator}\n         onChange={(e)=> setInputData({...inputData, creator: e.target.value})}/>\n      </FormGroup>\n      <FormGroup className=\"mb-2\">\n        <Label className=\"mb-2\" for=\"title\">Title</Label>\n        <Input\n         required\n         type=\"text\"\n         name=\"title\" \n         id=\"title\"\n         placeholder=\"title...\"\n         value={inputData.title}\n         onChange={(e)=>setInputData({...inputData, title: e.target.value})}/>\n      </FormGroup>\n      <FormGroup className=\"mb-2\">\n        <Label className=\"mb-2\" for=\"title\">Tags</Label>\n        <Input \n        required\n        type=\"text\" \n        name=\"title\"\n         id=\"tags\" \n         placeholder=\"to your friends\"\n         value={inputData.tags}\n         onChange={(e)=>setInputData({...inputData, tags: e.target.value})} />\n      </FormGroup>\n      <FormGroup className=\"mb-2\">\n        <Label className=\"mb-2\" for=\"message\">Your impression</Label>\n        <Input \n         type=\"textarea\"\n         name=\"text\" \n         id=\"text\" \n         placeholder=\"share your impression\" \n         className=\"text-area\"\n         cols=\"30\" rows=\"5\"\n         value={inputData.message}\n         onChange={(e)=>setInputData({...inputData, message: e.target.value})} />\n      </FormGroup>\n      <FileBase\n        className=\"selected-file\"\n        type=\"file\"\n        multiple={false}\n        onDone ={({base64}) => setInputData({...inputData, selectedFile: base64})}/> \n      <Button type=\"submit\" className=\"btn btn-success mt-2\">Share</Button>\n      <Button className=\"btn btn-danger mb-2 mt-2\">Cancel</Button>\n    </Form>\n    )\n}\nexport default FormElements\n"]},"metadata":{},"sourceType":"module"}