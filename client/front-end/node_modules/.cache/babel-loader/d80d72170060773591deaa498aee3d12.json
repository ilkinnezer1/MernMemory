{"ast":null,"code":"var _jsxFileName = \"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/MainComponent/MainComponents.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Paper, Button, AppBar, TextField, Grid, Container, Grow } from '@material-ui/core';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport ChipInput from 'material-ui-chip-input';\nimport Posts from '../Post/posts';\nimport FormElements from '../Form/forms';\nimport getPost from '../../REDUX/action/action';\nimport Footer from '../Footer/Footer';\nimport Intro from './Intro';\nimport PaginationContainer from '../Paginator/Pagination'; //Use query function allows us to find any element by using its location\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  return new URLSearchParams(useLocation().search);\n}\n\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\nconst MainComponents = () => {\n  _s2();\n\n  const [currentId, setCurrentId] = useState(null);\n  const dispatch = useDispatch();\n  const query = useQuery();\n  const history = useHistory();\n  const page = query.get(\"page\") || 1; // Allows us to get any page we search\n\n  const searchQuery = query.get(\"SearchQuery\"); //MAKES DISPATCHING WHERE IT CAN DISPLAY OUR DATA ON THE SCREEN\n  // IT WILL WORK ONLY WHEN THE DISPATCH METHOD WORKS\n\n  useEffect(() => {\n    dispatch(getPost());\n  }, [currentId, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justify: \"space-between\",\n        alignItems: \"stretch\",\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(Posts, {\n            setCurrentId: setCurrentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          md: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormElements, {\n            currentId: currentId,\n            setCurrentId: setCurrentId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n            position: \"static\",\n            color: \"inherit\",\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              name: \"search\",\n              variant: \"outlined\",\n              label: \"Search Posts\",\n              fullWidth: true,\n              value: \"test\",\n              onChange: () => {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 6,\n            children: /*#__PURE__*/_jsxDEV(PaginationContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(MainComponents, \"Uu4HDBg2Uwon+C5uE9AK/dglezY=\", false, function () {\n  return [useDispatch, useQuery, useHistory];\n});\n\n_c = MainComponents;\nexport default MainComponents;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainComponents\");","map":{"version":3,"sources":["/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/MainComponent/MainComponents.js"],"names":["React","useState","useEffect","useDispatch","Paper","Button","AppBar","TextField","Grid","Container","Grow","useHistory","useLocation","ChipInput","Posts","FormElements","getPost","Footer","Intro","PaginationContainer","useQuery","URLSearchParams","search","MainComponents","currentId","setCurrentId","dispatch","query","history","page","get","searchQuery"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Paper, Button, AppBar, TextField, Grid, Container, Grow } from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport ChipInput from 'material-ui-chip-input'\nimport Posts from '../Post/posts'\nimport FormElements from '../Form/forms'\nimport getPost from '../../REDUX/action/action'\nimport Footer from '../Footer/Footer'\nimport Intro from './Intro'\nimport PaginationContainer from '../Paginator/Pagination'\n\n\n//Use query function allows us to find any element by using its location\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search)\n}\n\nconst MainComponents = () => {\n    const [currentId,  setCurrentId] = useState(null)\n    const dispatch = useDispatch();\n    const query = useQuery()\n    const history = useHistory()\n    const page = query.get(\"page\") || 1 // Allows us to get any page we search\n    const searchQuery = query.get(\"SearchQuery\")\n    //MAKES DISPATCHING WHERE IT CAN DISPLAY OUR DATA ON THE SCREEN\n    // IT WILL WORK ONLY WHEN THE DISPATCH METHOD WORKS\n      \n    useEffect(() => {\n        dispatch(getPost())\n      },[currentId, dispatch])\n\n    return (\n        <Grow in>\n        <Container maxWidth=\"xl\">\n            <Grid container justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n                <Grid item xs={12} sm={8} md={9} >\n                <Posts setCurrentId={setCurrentId}/>\n                </Grid>\n                <Grid item xs={12} sm={4} md={3} >\n                <FormElements currentId={currentId} setCurrentId={setCurrentId}/>\n                <AppBar position=\"static\" color=\"inherit\">\n                    <TextField name=\"search\" variant=\"outlined\" label=\"Search Posts\" fullWidth value=\"test\" onChange={()=>{}}/>\n                </AppBar>\n\n                <Paper elevation={6}>\n                <PaginationContainer/>\n                 </Paper>\n                </Grid>\n            </Grid>\n            <Footer/> \n        </Container>\n        </Grow>\n    )\n} \n\nexport default MainComponents\n"]},"metadata":{},"sourceType":"module"}