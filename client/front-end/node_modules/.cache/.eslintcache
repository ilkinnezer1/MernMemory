[{"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/index.js":"1","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/App.js":"2","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/REDUX/reducers/index.js":"3","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/REDUX/action/action.js":"4","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/Api/api.js":"5","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/REDUX/reducers/reducers.js":"6","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Post/posts.js":"7","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Form/forms.js":"8","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Post/mainPost/post.js":"9","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/MainComponent/MainComponents.js":"10","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Auth/Auth.js":"11","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Auth/InputCont.js":"12","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/REDUX/reducers/auth.js":"13","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/REDUX/action/auth.js":"14","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Footer/Footer.js":"15","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/About/About.js":"16","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/About/Community.js":"17","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/MainComponent/Intro.js":"18","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Nav Panel/Navbar.js":"19","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Paginator/Pagination.js":"20","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Paginator/styles.js":"21","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/MainComponent/styles.js":"22","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Details/PostDetails.jsx":"23","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/ScrollToTop.js":"24","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Details/styles.js":"25","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/MainComponent/Community/Community.js":"26"},{"size":561,"mtime":1636022685552,"results":"27","hashOfConfig":"28"},{"size":1195,"mtime":1653913938371,"results":"29","hashOfConfig":"28"},{"size":171,"mtime":1634728373551,"results":"30","hashOfConfig":"28"},{"size":2367,"mtime":1636022599324,"results":"31","hashOfConfig":"28"},{"size":1077,"mtime":1636488377821,"results":"32","hashOfConfig":"28"},{"size":1091,"mtime":1635937567446,"results":"33","hashOfConfig":"28"},{"size":824,"mtime":1636483554940,"results":"34","hashOfConfig":"28"},{"size":3738,"mtime":1636224764070,"results":"35","hashOfConfig":"28"},{"size":1890,"mtime":1636481737183,"results":"36","hashOfConfig":"28"},{"size":3786,"mtime":1636919901926,"results":"37","hashOfConfig":"28"},{"size":4361,"mtime":1636918399705,"results":"38","hashOfConfig":"28"},{"size":1101,"mtime":1636227240058,"results":"39","hashOfConfig":"28"},{"size":419,"mtime":1634900324653,"results":"40","hashOfConfig":"28"},{"size":578,"mtime":1634905682698,"results":"41","hashOfConfig":"28"},{"size":728,"mtime":1635518433037,"results":"42","hashOfConfig":"28"},{"size":1215,"mtime":1635850094218,"results":"43","hashOfConfig":"28"},{"size":1987,"mtime":1635363780421,"results":"44","hashOfConfig":"28"},{"size":869,"mtime":1636487117251,"results":"45","hashOfConfig":"28"},{"size":2552,"mtime":1636487887950,"results":"46","hashOfConfig":"28"},{"size":538,"mtime":1635755256366,"results":"47","hashOfConfig":"28"},{"size":149,"mtime":1635755205651,"results":"48","hashOfConfig":"28"},{"size":256,"mtime":1636224253940,"results":"49","hashOfConfig":"28"},{"size":2138,"mtime":1636919595955,"results":"50","hashOfConfig":"28"},{"size":258,"mtime":1635850864362,"results":"51","hashOfConfig":"28"},{"size":849,"mtime":1636919787810,"results":"52","hashOfConfig":"28"},{"size":885,"mtime":1636918615810,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"lh4n1c",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/index.js",[],["113","114"],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/App.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/REDUX/reducers/index.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/REDUX/action/action.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/Api/api.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/REDUX/reducers/reducers.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Post/posts.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Form/forms.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Post/mainPost/post.js",["115","116","117","118"],"import React from 'react'\nimport {Card, CardBody, CardText, CardImg, CardTitle, CardSubtitle, Button, Container, Row, Col} from \"reactstrap\"\nimport {useHistory} from \"react-router-dom\"\nimport {useDispatch} from \"react-redux\"\nimport \"./post.css\"\nimport {deleteThePost, likeNewPost} from \"../../../REDUX/action/action\"\n\n  //Adding cards and specified by props coming from posts as a selector\n//Styling with reactstrap\nconst Post = ({post, setCurrentId}) =>{\n  const dispatch = useDispatch()\n  const history = useHistory()\nconst user  = JSON.parse(localStorage.getItem(\"profile\"))\n\nconst handleClick = () => {\n  history.push(`/details/${post._id}`)\n}\n\n   //CARD ELEMENTS \n    return (\n      <div className=\"Div\">\n         <Card className=\"pb-5 rounded cards d-flex word-wrap\">\n           <CardImg top height=\"200px\" src={post.selectedFile} className=\"rounded view overlay w-100\" onClick={handleClick}/>\n        <div className=\"editing\">\n        <CardTitle tag=\"h5\" className=\"title\">{post.name}</CardTitle> \n        {(user?.result?._id===post?.creator) && <p className=\"dots\" title=\"Edit\" onClick={() =>setCurrentId(post._id)}>...</p>}\n        </div>\n        <CardBody>\n          <div onClick={handleClick}>\n          <CardTitle tag=\"h3\" className=\"sec-title\">{post.title}</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted tags\">{post.tags.map(tag => `#${tag} `)}</CardSubtitle>\n          <CardText className=\"message\">{post.message}</CardText>\n          </div>\n          <div className=\"buttons\">\n          <span className=\"like-button\" onClick={()=> dispatch(likeNewPost(post._id))}> Like {post.likes.length}</span>\n          {(user?.result?._id === post?.creator) && \n          <span className=\"delete-button\" onClick={()=> dispatch(deleteThePost(post._id))}>Delete</span> }\n          </div>\n        </CardBody>\n      </Card>\n      </div>\n    )\n}\n\nexport default Post\n","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/MainComponent/MainComponents.js",["119","120","121","122"],"import React,{useState, useEffect} from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Paper, Button, AppBar, TextField, Grid, Container, Grow } from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport Posts from '../Post/posts'\nimport FormElements from '../Form/forms'\nimport getPost from '../../REDUX/action/action'\nimport {getPostbySearch} from '../../REDUX/action/action'\nimport Footer from '../Footer/Footer'\nimport useStyles from \"./styles\"\nimport ReactChipInput from \"react-chip-input\"\nimport \"./home.css\"\nimport Intro from './Intro'\nimport PaginationContainer from '../Paginator/Pagination'\nimport Community from './Community/Community'\n\n\n\n//Use query function allows us to find any element by using its location\n\nconst MainComponents = () => {\n    const [currentId,  setCurrentId] = useState(null)\n    const [search, setSearch]= useState(\"\")\n    const [tags, setTags] = useState([])\n    const dispatch = useDispatch();\n    const query = new URLSearchParams(useLocation().search) //Getting specific url with parameters\n    const history = useHistory()\n    const page = query.get(\"page\") || 1 // Allows us to get any page we search\n    const searchQuery = query.get(\"searchQuery\")\n    const classes = useStyles()\n    //MAKES DISPATCHING WHERE IT CAN DISPLAY OUR DATA ON THE SCREEN\n    // IT WILL WORK ONLY WHEN THE DISPATCH METHOD WORKS\n\n    useEffect(() => {\n        dispatch(getPost())\n      },[currentId, dispatch])\n\n      const handleSearch = () => {\n        if(search.trim() || tags){\n              dispatch(getPostbySearch({search, tags: tags.join(\",\")}))\n              history.push(`/posts/search?searchQuery=${search}`)\n        }else{\n            history.push(\"/\")\n        }\n    }\n\n        // Handle Functions      \n      const handlePress = (e) => {\n          if(e.keyCode === 13){\n              handleSearch()\n              // add handel search here\n          }\n      }\n      const handleAdd = (tag) => {\n        setTags([...tags, tag]) //First tag is to spread value on state and second one is a parameter of handle add functions\n      }\n      const handleDelete = index => {\n           const tag = tags.slice();\n            tag.splice(index, 1);\n             setTags(tag);\n      }\n      //HandleSearch Function //search trimn //dispatch fetch search post //hsitoru push / \n\n    return (\n        <Grow in>\n            <div className=\"full\">\n            <Intro/>\n        <Container>\n            <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\n                <Grid item xs={12} sm={8} md={9} >\n                <Posts setCurrentId={setCurrentId}/>\n                </Grid>\n                <Grid item xs={12} sm={4} md={3} className=\"grid-container\">\n                    <div className=\"mt-5 pt-1\">\n                    <TextField name=\"search\" variant=\"filled\" label=\"Search Posts\" fullWidth autoComplete=\"off\"\n                     value={search}\n                     onChange={(e)=>setSearch(e.target.value)} \n                     onKeyPress={handlePress}/>\n                     </div>\n                     <div className=\"mt-2\">\n                     <ReactChipInput\n                     autoComplete={\"off\"}\n                     chips={tags}\n                     onSubmit={handleAdd}\n                     onRemove={handleDelete} />\n                     </div>\n                <Button onClick={handleSearch} className={classes.searchButton}>Search</Button>\n                <FormElements currentId={currentId} setCurrentId={setCurrentId}/>\n                <Paper elevation={6}>\n                 </Paper>\n                </Grid>\n            </Grid>\n            \n        </Container>\n        <Community/>\n        <Footer/> \n        </div>\n        </Grow>\n    )\n} \n\nexport default MainComponents\n","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Auth/Auth.js",["123"],"import React, {useState} from 'react'\nimport InputCont from './InputCont'\nimport {useDispatch} from \"react-redux\"\nimport {useHistory } from 'react-router-dom'\nimport {GoogleLogin} from \"react-google-login\"\nimport {signInNewProfile, signUpNewAccount } from '../../REDUX/action/auth'\nimport {Container, Grid} from \"@material-ui/core\"\nimport img from './icon.jpeg'\nimport \"./Auth.css\"\n\n\nconst Auth = () => {\n    const INITIAL_STATE = {\n        name:\"\",\n        surname:\"\",\n        email:\"\",\n        password:\"\",\n        confirmPassword: \"\"\n    }\n\nconst [showPass, setShowPass] = useState(false)\nconst [isSignUp, setIsSignUp] = useState(false)\nconst [inputData, setInputData] = useState(INITIAL_STATE)\nconst dispatch = useDispatch()\nconst history = useHistory()\n\n\n    const handleSubmit = event => {\n        event.preventDefault()\n\n        if(isSignUp){\n            dispatch(signUpNewAccount(inputData, history))\n        }else{\n            dispatch(signInNewProfile(inputData, history))\n        }\n    }\n    const handleShowPassword = () => setShowPass(prev => !prev ) //Toggling show password function that will make password visible to check out\n    \n    const handleChange = event => {\n        setInputData({...inputData, [event.target.name]: event.target.value})\n    }\n    const switchMode = () => {\n        setIsSignUp(prev => !prev)\n        setShowPass(false)\n    }\n\n    //Google Authentication\n    const googleSuccess = async (res) => {\n        const result = res?.profileObj;\n        const token = res?.tokenId\n\n        try{\n            dispatch({type: \"AUTH\", payload: {result, token}})\n            history.push(\"/\")\n        }catch(error){\n            console.log(error)\n        }\n    }\n    const googleFailure = () => {\n        console.log(\"Google sing in process was unsuccessful. Try again\")\n    }\n\n    return (\n        <div className=\" main-container\">\n            <Container>\n            <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12 col-12\">\n            <form className=\"main form-container\" onSubmit={handleSubmit}>\n            <img src={img} className=\"avatar mt-2 mb-1\"/>\n        <div className=\"h1\">{isSignUp ? \"Sign up\" : \"Sign in\"}</div> \n        <Grid container spacing={2}> \n        <div className=\"container-wrapper\">\n            {isSignUp && (\n                <>\n                    <div className=\" main-input-group\">\n                    <InputCont name=\"name\" label=\"Your name\" handleChange={handleChange}/>\n                    <InputCont name=\"surname\" label=\"Your surname\" handleChange={handleChange}/>\n                    </div>\n                </>\n            )}\n            <div className=\"second-input-group text-white\">\n                <div className=\"first\">\n                <InputCont name=\"email\" label=\"Email\" handleChange={handleChange} type={\"email\"} />\n                </div>\n            <InputCont name=\"password\" label=\"Password\" handleChange={handleChange} type={showPass ? \"text\" : \"password\"} handleShowPassword={handleShowPassword}/>\n            </div>\n            {isSignUp && (\n                <div className=\"password-confirmation\">\n                     <InputCont name=\"confirmPassword\" label=\"Password Confirmation\" handleChange={handleChange} type=\"password\" handleShowPassword={handleShowPassword}/>\n                </div>\n            )}\n        </div>\n        </Grid>\n        <GoogleLogin\n         clientId=\"74369160375-94lchn31v8jivfash19jfe9605cs8v07.apps.googleusercontent.com\"\n         render={renderProps => (\n             <button className=\"btn btn-primary mt-5 p-2 rounded\" onClick={renderProps.onClick} disabled={renderProps.disabled}>Sign up with Google</button>\n         )}\n         onSuccess = {googleSuccess}\n         onFailure = {googleFailure}\n         cookiePolicy = \"single_host_origin\"\n         />\n                <div className=\"button\">\n                <button type=\"submit\" className=\"btn btn-success\">{isSignUp ? \"Sign up\" : \"Sign in\"}</button>\n                </div>\n            <Grid container justifyContent=\"flex-end\">\n                <Grid item>\n                    <div className=\"p-tag\">\n                    <p onClick={switchMode}>{isSignUp ? \"Already have an account? Sign in\" : \"Don't have an account ? Sign up\"}</p>\n                    </div>\n                </Grid>\n            </Grid>\n</form>\n</div>\n</Container>\n        </div>\n    )\n}\n\nexport default Auth\n","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Auth/InputCont.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/REDUX/reducers/auth.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/REDUX/action/auth.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Footer/Footer.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/About/About.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/About/Community.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/MainComponent/Intro.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Nav Panel/Navbar.js",["124","125"],"import React,{useEffect, useState} from 'react'\nimport \"./Nav-panel.css\" \nimport {Link} from \"react-router-dom\"\nimport { useDispatch } from 'react-redux'\nimport decode from \"jwt-decode\"\nimport { useHistory, useLocation } from 'react-router-dom'\nimport Avatar from 'react-avatar'\nimport {Button,Container} from \"reactstrap\"\nimport logo from './logo.svg'\n\n\n\nconst Navbar = () =>  {\n\nconst [mockUser, setMockUser] = useState(JSON.parse(localStorage.getItem(\"profile\")))\nconst dispatch = useDispatch()\nconst history = useHistory()\nconst location = useLocation()\n\n       const handleLogOut = () => { \n          dispatch({type:\"LOGOUT\"})\n            history.push('/auth')\n               setMockUser(null)\n            }\n\n            useEffect(()=> {\n                const token = mockUser?.token\n                if(token){\n                    const decodedToken = decode(token)\n                    if(decodedToken.exp * 1000 < new Date().getTime()) handleLogOut()\n                }\n                setMockUser(JSON.parse(localStorage.getItem(\"profile\")))\n            }, [location])\n\n         \n\n    return (\n        <nav className=\" navbar navbar-light bg-light d-flex justify-content-between\">\n            <Container>\n            <div className=\"navbar-brand\">\n            <Link to=\"/\">\n                  <img className=\"navImg\" src={logo} />\n          </Link>\n              </div>\n         <div>\n                {mockUser?.result ? (\n                    <div className=\"other\">\n                        <div className=\"other\">\n                        <Avatar color={Avatar.getRandomColor('sitebase', ['red', 'green', 'blue', 'gray', 'white','black'])}\n                        name={mockUser.result?.name}\n                        round \n                        size=\"40\" \n                        src={mockUser.result?.imageUrl}\n                        textSizeRatio={2}/>\n                            <span style={{color: \"black\",  margin: \"10px 5px 0 5px\",}}>{mockUser.result?.name}</span>\n                        <div style={{margin: \"10px 5px 0 5px\"}} className=\"user-name\">{mockUser.result?.surname}</div>\n                        </div>\n                        <Button color=\"danger\" onClick={handleLogOut}>Logout</Button>\n                    </div>\n                ) : (\n                    <div>\n                    <Link to=\"/auth\">\n                      <Button color=\"success\">Sign in</Button>\n                    </Link>\n                    </div>\n                )}\n         </div>\n         </Container>\n        </nav>\n    )\n}\n\nexport default Navbar\n","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Paginator/Pagination.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Paginator/styles.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/MainComponent/styles.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Details/PostDetails.jsx",["126","127","128","129"],"import React, {useEffect} from 'react'\nimport {Paper, Typography, CircularProgress, Divider} from \"@material-ui/core\"\nimport {useParams, useHistory} from \"react-router-dom\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport { getSinglePost, getPostbySearch } from '../../REDUX/action/action'\nimport useStyles from \"./styles\"\nimport \"./details.css\"\n\nconst PostDetails = () => {  //Taking all posts from reducer\n    const {post} = useSelector(state => state.posts)\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const {id} = useParams()\n\n    useEffect(()=> {\n        dispatch(getSinglePost(id))\n    }, [id]) //Executing by changing id\n    //Second useEffect will render depends on post\n\n    // useEffect(() => {\n    //     if(post){\n    //       dispatch(getPostbySearch({search: \"none\",  tags: post?.tags.join(\",\")}))\n    //     }\n    // }, [post] )\n          //  const recommendedPost = posts.filter(({_id}) => _id !== post._id)\n          //  console.log(recommendedPost)\n //Map and render\n      //CHECKING THE EXISTENCE OF SINGLE POST\n      if(!post) return null;\n\n    return (\n    <Paper className=\"paper\" style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\n       <div className={classes.card}>\n          <div className={classes.section}>\n            <Typography className=\"text-white\" variant=\"h3\" component=\"h2\">{post.title}</Typography>\n          <Typography className=\"tags\" gutterBottom variant=\"h6\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\n            <Typography className=\"text-white\" gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n              <Divider style={{ margin: '20px 0' }} />\n              <Divider style={{ margin: '20px 0' }} />\n            </div>\n              <div className={classes.imageSection}>\n             <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\n              </div>\n              </div>\n       </Paper>\n    )\n}\n\nexport default PostDetails\n","/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/ScrollToTop.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/Details/styles.js",[],"/Users/yusifnezerov/Desktop/MERN memory/client/front-end/src/components/MainComponent/Community/Community.js",["130","131"],"import React from 'react'\nimport \"./community.css\"\nconst Community = () => {\n    return (\n        <div className=\"spi-sec\">\n            <div className=\"container spi-container\">\n                <div className=\"row\">\n                <div className=\"col-xl-4  text-center\">\n                    <img src=\"/images/spi.svg\"  />\n                </div> \n                <div className=\"col-xl-8 ml-2\">\n                    <p className=\"text pt-1\">\n                    SPI was founded by Pat Flynn as a personal blog back in 2008. Since then, it has grown into a dynamic, media-based education and training company. Our team members are the real heroes that make everything possible here at SPI.\n                    </p>\n                    <a className=\"meet\">MEET OUR TEAM</a>\n                </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Community\n",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":2,"column":69,"nodeType":"138","messageId":"139","endLine":2,"endColumn":75},{"ruleId":"136","severity":1,"message":"140","line":2,"column":77,"nodeType":"138","messageId":"139","endLine":2,"endColumn":86},{"ruleId":"136","severity":1,"message":"141","line":2,"column":88,"nodeType":"138","messageId":"139","endLine":2,"endColumn":91},{"ruleId":"136","severity":1,"message":"142","line":2,"column":93,"nodeType":"138","messageId":"139","endLine":2,"endColumn":96},{"ruleId":"136","severity":1,"message":"143","line":3,"column":25,"nodeType":"138","messageId":"139","endLine":3,"endColumn":31},{"ruleId":"136","severity":1,"message":"144","line":14,"column":8,"nodeType":"138","messageId":"139","endLine":14,"endColumn":27},{"ruleId":"136","severity":1,"message":"145","line":28,"column":11,"nodeType":"138","messageId":"139","endLine":28,"endColumn":15},{"ruleId":"136","severity":1,"message":"146","line":29,"column":11,"nodeType":"138","messageId":"139","endLine":29,"endColumn":22},{"ruleId":"147","severity":1,"message":"148","line":68,"column":13,"nodeType":"149","endLine":68,"endColumn":58},{"ruleId":"150","severity":1,"message":"151","line":33,"column":16,"nodeType":"152","endLine":33,"endColumn":26,"suggestions":"153"},{"ruleId":"147","severity":1,"message":"148","line":42,"column":19,"nodeType":"149","endLine":42,"endColumn":56},{"ruleId":"136","severity":1,"message":"154","line":2,"column":28,"nodeType":"138","messageId":"139","endLine":2,"endColumn":44},{"ruleId":"136","severity":1,"message":"155","line":5,"column":25,"nodeType":"138","messageId":"139","endLine":5,"endColumn":40},{"ruleId":"136","severity":1,"message":"156","line":13,"column":11,"nodeType":"138","messageId":"139","endLine":13,"endColumn":18},{"ruleId":"150","severity":1,"message":"157","line":18,"column":8,"nodeType":"152","endLine":18,"endColumn":12,"suggestions":"158"},{"ruleId":"147","severity":1,"message":"148","line":9,"column":21,"nodeType":"149","endLine":9,"endColumn":51},{"ruleId":"159","severity":1,"message":"160","line":15,"column":21,"nodeType":"149","endLine":15,"endColumn":41},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'AppBar' is defined but never used.","'PaginationContainer' is defined but never used.","'page' is assigned a value but never used.","'searchQuery' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleLogOut' and 'mockUser?.token'. Either include them or remove the dependency array.","ArrayExpression",["163"],"'CircularProgress' is defined but never used.","'getPostbySearch' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["164"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [handleLogOut, location, mockUser?.token]",{"range":"169","text":"170"},"Update the dependencies array to be: [dispatch, id]",{"range":"171","text":"172"},[1063,1073],"[handleLogOut, location, mockUser?.token]",[666,670],"[dispatch, id]"]